<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="post">

    <!-- 게시글 목록 조회 -->
   <select id="selectPostList" resultType="post">
    SELECT *
    FROM (
        SELECT ROWNUM AS rnum,
               p.post_key AS postKey,
               p.post_cd AS postCd,
               p.user_key AS userKey,
               u.user_nicknm AS userNickNm,
               p.post_title AS postTitle,
               p.post_content AS postContent,
               p.post_view AS postViews,
               TO_CHAR(p.post_date, 'YYYY-MM-DD') AS postDate,
               p.confirm_yn AS confirmYn,
               p.delete_yn AS deleteYn,
               p.delete_reason AS deleteReason,
               t.post_nm AS postCategory
        FROM tbl_post p
        JOIN tbl_user u ON p.user_key = u.user_key
        JOIN tbl_post_type t ON p.post_cd = t.post_cd
        WHERE p.delete_yn = 0  <!-- 삭제되지 않은 글만 가져옴 -->
          AND p.post_cd = #{postCd}  <!-- 게시판 코드 필터링 -->
        ORDER BY p.post_date DESC
    )
    WHERE rnum BETWEEN #{start} AND #{end}
</select>

    <!-- 전체 게시글 수 조회 -->
    <select id="selectPostCount" resultType="int">
        SELECT COUNT(*)
        FROM tbl_post
        WHERE delete_yn = 0
    </select>

    <!-- 게시글 시퀀스 키 가져오기 -->
    <select id="selectPostKey" resultType="string">
        SELECT seq_post.nextval
        FROM dual
    </select>

    <!-- 자유게시판 삽입 -->
    <insert id="insertfreePost" parameterType="post">
        INSERT INTO tbl_post (
            post_key, post_cd, user_key, post_title, post_content,
            post_date, post_view, confirm_yn, delete_yn
        ) VALUES (
            'po' || TO_CHAR(SYSDATE, 'YYMMDD') || LPAD(seq_post.NEXTVAL, 4, '0'),
            2, #{userKey}, #{postTitle}, #{postContent},
            SYSDATE, 0, 0, 0
        )
    </insert>



	   <!-- 공지사항 게시글 삽입 -->
    <insert id="insertNoticePost" parameterType="post">
    INSERT INTO tbl_post (
        post_key, post_cd, user_key, post_title, post_content,
        post_date, post_view, confirm_yn, delete_yn
    ) VALUES (
        'no' || TO_CHAR(SYSDATE, 'YYMMDD') || LPAD(seq_post.NEXTVAL, 4, '0'),
        1, #{userKey}, #{postTitle}, #{postContent},
        SYSDATE, 0, 0, 0
    )
</insert>

    <!-- 특정 게시글 상세 조회 -->
    <select id="selectOnePost" parameterType="String" resultType="post">
        SELECT p.post_key AS postKey,
               p.post_cd AS postCd,
               p.user_key AS userKey,
               u.user_nicknm AS userNickNm,
               p.post_title AS postTitle,
               p.post_content AS postContent,
               p.post_date AS postDate,
               p.post_view AS postViews,
               p.confirm_yn AS confirmYn,
               p.delete_yn AS deleteYn,
               p.delete_reason AS deleteReason
        FROM tbl_post p
        JOIN tbl_user u ON p.user_key = u.user_key
        WHERE p.post_key = #{postKey}
    </select>

    <!-- 댓글 삽입 -->
    <insert id="insertComment" parameterType="com.khedu.sooljura.post.model.vo.Comment">
        INSERT INTO tbl_comment (
            comment_key, post_key, user_key, comment_content, comment_date
        ) VALUES (
            'po' || TO_CHAR(SYSDATE, 'YYMMDD') || LPAD(seq_comment.NEXTVAL, 4, '0'),
            #{postKey}, #{userKey}, #{commentContent}, SYSDATE
        )
    </insert>

    <!-- 댓글 목록 조회 -->
    <select id="selectCommentsByPostKey" parameterType="string" resultType="com.khedu.sooljura.post.model.vo.Comment">
        SELECT c.comment_key AS commentKey,
               c.post_key AS postKey,
               c.user_key AS userKey,
               u.user_nicknm AS userNickNm,
               c.comment_content AS commentContent,
               TO_CHAR(c.comment_date, 'YYYY-MM-DD HH24:MI:SS') AS commentDate
        FROM tbl_comment c
        JOIN tbl_user u ON c.user_key = u.user_key
        WHERE c.post_key = #{postKey}
        ORDER BY c.comment_date ASC
    </select>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment" parameterType="map">
        DELETE FROM tbl_comment
        WHERE comment_key = #{commentKey} AND user_key = #{userKey}
    </delete>

    <!-- 댓글에 연결된 게시글 키 조회 -->
    <select id="selectPostKeyByCommentKey" parameterType="string" resultType="string">
        SELECT post_key
        FROM tbl_comment
        WHERE comment_key = #{commentKey}
    </select>

    <!-- 댓글 수정 -->
    <update id="updateComment" parameterType="com.khedu.sooljura.post.model.vo.Comment">
        UPDATE tbl_comment
        SET comment_content = #{commentContent},
            comment_date = SYSDATE
        WHERE comment_key = #{commentKey}
    </update>

</mapper>
